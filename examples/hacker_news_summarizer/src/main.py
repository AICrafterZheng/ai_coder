###This file is generated by AI from prompts/src/my_code.py. DO NOT MODIFY THIS FILE MANUALLY###

import requests
import json
from ai_coder.openai_client import call_llm

def get_top_hacker_news(keywords):
    """
    To implement a function that fetches the top hacker news mentioning certain keywords, 
    we'll need to make HTTP requests to the provided URL and parse the JSON response.
    We'll use the 'requests' library for HTTP requests and 'json' library for parsing the response.
    """
    news_list = []
    response = requests.get('https://hacker-news.firebaseio.com/v0/topstories.json')
    story_ids = json.loads(response.text)
    for story_id in story_ids:
        story_url = (f'https://hacker-news.firebaseio.com/v0/item/{story_id}.json')
        story_response = requests.get(story_url)
        story = json.loads(story_response.text)
        if 'title' in story and any(keyword in story['title'].lower() for keyword in keywords):
            news_list.append({'title': story['title'], 'url': story.get('url', '')})
    return news_list

def article_summary(url):
    """
    Function to fetch a webpage and get its summary using call_llm
    """
    response = requests.get(url)
    text = response.text
    summary = call_llm(text, 'summarize')
    return summary